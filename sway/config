# Read `man 5 sway` for a complete reference.
#calibration has resolution dependent cursor shortcuts
include calibration

set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema color-scheme 'prefer-dark'
    #gsettings set $gnome-schema cursor-theme 'Your cursor Theme'
    #gsettings set $gnome-schema font-name 'Your font name'
}
exec sworkstyle &> /tmp/sworkstyle.log
exec amixer set Capture off
exec keyd-application-mapper &

### Variables
  set $mod Mod4
  set $left h
  set $down j
  set $up k
  set $right l

## Gaps
  gaps inner 0
  gaps outer 0
  default_border pixel 1
  smart_gaps on
  for_window [app_id="gnome-calendar"] floating enabled

font pango:"JetBrainsMono NF" 0
titlebar_border_thickness 1
titlebar_padding 1

### Input configuration
# get names of inputs: swaymsg -t get_inputs
# `man 5 sway-input` for more info
input type:keyboard {
    #( changed to ~/.xkb/symbols/rctl_remapped_rwin)
    xkb_layout "us"
    xkb_variant altgr-intl 
    xkb_options "altwin:menu_win,numpad:mac"
    repeat_delay 299
    repeat_rate 25
}
input type:touchpad {
    tap enabled
    middle_emulation disabled
}

### Key bindings
################################3
# Media/Hardware control
bindsym XF86AudioMute        exec amixer set Master toggle
bindsym XF86AudioLowerVolume exec amixer set Master 5%-
bindsym --locked XF86AudioLowerVolume exec amixer set Master 5%-
bindsym XF86AudioRaiseVolume exec amixer set Master 5%+
bindsym --locked XF86AudioRaiseVolume exec amixer set Master 5%+
bindsym XF86AudioMicMute     exec amixer set Capture toggle
bindsym Print  exec grim -g "$(slurp)" - | swappy -f -
bindsym $mod+p exec grim -g "$(slurp)" - | swappy -f -
bindsym --locked XF86MonBrightnessUp exec light -T 1.4
bindsym --locked XF86MonBrightnessDown exec light -T 0.72

# TODO: (low priority) do windows tiling behaviour. Currently just moves cursor
bindsym $mod+Left  seat "*" cursor move -5 0
bindsym $mod+Down  seat "*" cursor move 0 +5
bindsym $mod+Up    seat "*" cursor move 0 -5
bindsym $mod+Right seat "*" cursor move +5 0

# Basics:
# Start a terminal
bindsym $mod+Return exec alacritty

# Kill focused window
bindsym $mod+Shift+4 kill

# Launcher. Note: it's recommended that you pass the final command to sway
bindsym $mod+r exec bemenu-run --fn "Terminus Normal 20" | xargs swaymsg exec --
# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (log out of Wayland session)
bindsym $mod+Shift+y exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Move window focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

###
# Workspaces (number is needed for sworkstyle, TODO: somehow label workspaces by letter)
#
  # Switch to workspace
  bindsym $mod+1 workspace number 1
  bindsym $mod+2 workspace number 2
  bindsym $mod+3 workspace number 3
  bindsym $mod+q workspace number 4
  bindsym $mod+w workspace number 5
  bindsym $mod+e workspace number 6
  bindsym $mod+a workspace number 7
  bindsym $mod+s workspace number 8
  bindsym $mod+d workspace number 9
  bindsym $mod+z workspace number 10
  bindsym $mod+x workspace number 11
  bindsym $mod+c workspace number 12
  # Move focused container to workspace
  bindsym $mod+Shift+1 move container to workspace number 1
  bindsym $mod+Shift+2 move container to workspace number 2
  bindsym $mod+Shift+3 move container to workspace number 3
  bindsym $mod+Shift+q move container to workspace number 4
  bindsym $mod+Shift+w move container to workspace number 5
  bindsym $mod+Shift+e move container to workspace number 6
  bindsym $mod+Shift+a move container to workspace number 7
  bindsym $mod+Shift+s move container to workspace number 8
  bindsym $mod+Shift+d move container to workspace number 9
  bindsym $mod+Shift+z move container to workspace number 10
  bindsym $mod+Shift+x move container to workspace number 11
  bindsym $mod+Shift+c move container to workspace number 12
  # Note: workspaces can have any name you want, not just numbers.
  # We just use 1-10 as the default.
 #
  # Scratchpad: (bag of holding windows)
  #
  # Move the currently focused window to the scratchpad
  bindsym $mod+Shift+minus move scratchpad

  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  bindsym $mod+minus scratchpad show

###
# LAYOUT:
  # split focused window:     [g]  >   |
  #                       [v] [b]  > _ *
  bindsym $mod+g split horizontal
  bindsym $mod+v split vertical
  bindsym $mod+b layout toggle split
  # Move focus to the parent container
  bindsym $mod+u focus parent

  # Switch the current container between different layout styles
  bindsym $mod+t layout tabbed
  bindsym $mod+equal layout stacking

  # Make the current focus fullscreen
  bindsym $mod+f fullscreen

  ###### Floating Window Stuff
  # 'normal' means:
  # Drag floating windows: $mod + left cursor drag. (normal)
  # Resize  ``      ``   : $mod + right cursor drag. (normal)
  floating_modifier $mod normal
  # Toggle the current focus between tiling and floating mode
  bindsym $mod+Shift+space floating toggle
  # Swap focus between the tiling area and the floating area
  bindsym $mod+BackSpace focus mode_toggle


#####
# MOUSE CURSOR PSEUDO-MODE
# # attempt to map mouse scroll wheel (2024-02-10 not working)
  bindsym SunProps+Next seat "-" cursor press button4
  bindsym SunProps+Prior seat "-" cursor press button5
  bindsym SunProps+kp_3 seat "-" cursor press 6
  bindsym SunProps+kp_4 seat "-" cursor press 7

  ### mid speed movement tab + hold via keyd
  bindsym XF86Launch1 seat "-" cursor move -30 -30
  bindsym XF86Launch2 seat "-" cursor move   0 -30
  bindsym XF86Launch3 seat "-" cursor move +30 -30
  bindsym XF86Launch4 seat "-" cursor move -30  0
  bindsym XF86Launch5 seat "-" cursor move   0 +30
  bindsym XF86Launch6 seat "-" cursor move +30  0
  bindsym XF86Launch7 seat "-" cursor move -30 +30
  bindsym XF86Launch8 seat "-" cursor move   0 +30
  bindsym XF86Launch9 seat "-" cursor move +30 +30
  ### fine tuned mouse movement ( meant for mouse keyd "mode")
  bindsym SunProps+left  seat "-" cursor move -5  0
  bindsym SunProps+down  seat "-" cursor move  0 +5
  bindsym SunProps+up    seat "-" cursor move  0 -5
  bindsym SunProps+right seat "-" cursor move +5  0
  ## press/release mouse button1
  bindsym XF86MenuKB seat "-" cursor press button1
  bindsym XF86Xfer seat "-" cursor release button1

###
# Resizing containers:
#
mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize shrink height 10px
    bindsym $up resize grow height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize shrink height 10px
    bindsym Up resize grow height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+o mode "resize"


### COLORS
#
# Window colorReturn seat "-" cursor press button2s
# color class           border  backgrd  text    indicator child_border
client.focused          #ffffff #93a1a1  #073692 #93a1a1   #4274ca
client.focused_inactive #252b23 #586e75  #eee8d5 #657b83   #135051
client.unfocused        #073642 #002b36  #839496 #073642   #000000
client.urgent           #fffb16 #dc322f  #eee8d5 #dc322f   #93a1a1

#
# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
    font pango:"JetBrainsMono NF" 10
    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    colors {
        background         #073642
        statusline         #00ff00
        separator          #eee8d5
        focused_workspace  #eee8d5 #93a1a1 #073642
        active_workspace   #657b83 #586e75 #eee8d5
        inactive_workspace #002b36 #073642 #839496
        urgent_workspace   #ff2b16 #ff322f #eee8d5
    }

    # colors {  
    #     # item;  border  background text
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #8d7d7d
    #    # urgent_worspace   #1122ff #ffffff #ff0000
    # }
}

include etc/sway/config.d/*
#caps as arros fails bu would maybe work via custom x input file)
#set $caps Mod2 
#bindsym $caps+h exec wtype -k 'left'; bindsym $caps+j exec wtype -k 'down'
#bindsym $caps+k exec wtype -k 'up'; bindsym $caps+l exec wtype -k 'right'
# bindsym $mod3+e exec wtype -M 'ctrl' -M 'shift' -P 'Right' -m 'shift' -m 'ctrl' 

# ########------
# leftover from default leaving just in case
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
